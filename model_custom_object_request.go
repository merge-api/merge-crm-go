/*
 * Merge CRM API
 *
 * The unified API for building rich integrations with multiple CRM platforms.
 *
 * API version: 1.0
 * Contact: hello@merge.dev
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package merge_crm_client

import (
	"encoding/json"
)

// CustomObjectRequest struct for CustomObjectRequest
type CustomObjectRequest struct {
	Fields map[string]interface{} `json:"fields"`
	// raw json response by property name
	ResponseRaw map[string]json.RawMessage `json:"-"`
}

// NewCustomObjectRequest instantiates a new CustomObjectRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomObjectRequest(fields map[string]interface{}) *CustomObjectRequest {
	this := CustomObjectRequest{}
	this.Fields = fields
	return &this
}

// NewCustomObjectRequestWithDefaults instantiates a new CustomObjectRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomObjectRequestWithDefaults() *CustomObjectRequest {
	this := CustomObjectRequest{}
	return &this
}

// GetFields returns the Fields field value
func (o *CustomObjectRequest) GetFields() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Fields
}

// GetFieldsOk returns a tuple with the Fields field value
// and a boolean to check if the value has been set.
func (o *CustomObjectRequest) GetFieldsOk() (*map[string]interface{}, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Fields, true
}

// SetFields sets field value
func (o *CustomObjectRequest) SetFields(v map[string]interface{}) {
	o.Fields = v
}

func (o CustomObjectRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["fields"] = o.Fields
	}
	return json.Marshal(toSerialize)
}

func (v *CustomObjectRequest) UnmarshalJSON(src []byte) error {
    type CustomObjectRequestUnmarshalTarget CustomObjectRequest

	var intermediateResult CustomObjectRequestUnmarshalTarget
	var err1 = json.Unmarshal(src, &intermediateResult)
    if err1 != nil {
        return err1
    }
    var err2 = json.Unmarshal(src, &intermediateResult.ResponseRaw)
	if err2 != nil {
		return err2
	}

	*v = CustomObjectRequest(intermediateResult)
	return nil
}
type NullableCustomObjectRequest struct {
	value *CustomObjectRequest
	isSet bool
}

func (v NullableCustomObjectRequest) Get() *CustomObjectRequest {
	return v.value
}

func (v *NullableCustomObjectRequest) Set(val *CustomObjectRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomObjectRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomObjectRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomObjectRequest(val *CustomObjectRequest) *NullableCustomObjectRequest {
	return &NullableCustomObjectRequest{value: val, isSet: true}
}

func (v NullableCustomObjectRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomObjectRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	var err1 = json.Unmarshal(src, &v.value)
    if err1 != nil {
        return err1
    }
    return json.Unmarshal(src, &v.value.ResponseRaw)
}


