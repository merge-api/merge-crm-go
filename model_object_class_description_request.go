/*
 * Merge CRM API
 *
 * The unified API for building rich integrations with multiple CRM platforms.
 *
 * API version: 1.0
 * Contact: hello@merge.dev
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package merge_crm_client

import (
	"encoding/json"
)

// ObjectClassDescriptionRequest struct for ObjectClassDescriptionRequest
type ObjectClassDescriptionRequest struct {
	Id string `json:"id"`
	OriginType OriginTypeEnum `json:"origin_type"`
	// raw json response by property name
	ResponseRaw map[string]json.RawMessage `json:"-"`
}

// NewObjectClassDescriptionRequest instantiates a new ObjectClassDescriptionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewObjectClassDescriptionRequest(id string, originType OriginTypeEnum) *ObjectClassDescriptionRequest {
	this := ObjectClassDescriptionRequest{}
	this.Id = id
	this.OriginType = originType
	return &this
}

// NewObjectClassDescriptionRequestWithDefaults instantiates a new ObjectClassDescriptionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewObjectClassDescriptionRequestWithDefaults() *ObjectClassDescriptionRequest {
	this := ObjectClassDescriptionRequest{}
	return &this
}

// GetId returns the Id field value
func (o *ObjectClassDescriptionRequest) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ObjectClassDescriptionRequest) GetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ObjectClassDescriptionRequest) SetId(v string) {
	o.Id = v
}

// GetOriginType returns the OriginType field value
func (o *ObjectClassDescriptionRequest) GetOriginType() OriginTypeEnum {
	if o == nil {
		var ret OriginTypeEnum
		return ret
	}

	return o.OriginType
}

// GetOriginTypeOk returns a tuple with the OriginType field value
// and a boolean to check if the value has been set.
func (o *ObjectClassDescriptionRequest) GetOriginTypeOk() (*OriginTypeEnum, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.OriginType, true
}

// SetOriginType sets field value
func (o *ObjectClassDescriptionRequest) SetOriginType(v OriginTypeEnum) {
	o.OriginType = v
}

func (o ObjectClassDescriptionRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["origin_type"] = o.OriginType
	}
	return json.Marshal(toSerialize)
}

func (v *ObjectClassDescriptionRequest) UnmarshalJSON(src []byte) error {
    type ObjectClassDescriptionRequestUnmarshalTarget ObjectClassDescriptionRequest

	var intermediateResult ObjectClassDescriptionRequestUnmarshalTarget
	var err1 = json.Unmarshal(src, &intermediateResult)
    if err1 != nil {
        return err1
    }
    var err2 = json.Unmarshal(src, &intermediateResult.ResponseRaw)
	if err2 != nil {
		return err2
	}

	*v = ObjectClassDescriptionRequest(intermediateResult)
	return nil
}
type NullableObjectClassDescriptionRequest struct {
	value *ObjectClassDescriptionRequest
	isSet bool
}

func (v NullableObjectClassDescriptionRequest) Get() *ObjectClassDescriptionRequest {
	return v.value
}

func (v *NullableObjectClassDescriptionRequest) Set(val *ObjectClassDescriptionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableObjectClassDescriptionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableObjectClassDescriptionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableObjectClassDescriptionRequest(val *ObjectClassDescriptionRequest) *NullableObjectClassDescriptionRequest {
	return &NullableObjectClassDescriptionRequest{value: val, isSet: true}
}

func (v NullableObjectClassDescriptionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableObjectClassDescriptionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	var err1 = json.Unmarshal(src, &v.value)
    if err1 != nil {
        return err1
    }
    return json.Unmarshal(src, &v.value.ResponseRaw)
}


