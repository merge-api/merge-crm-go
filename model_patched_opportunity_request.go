/*
 * Merge CRM API
 *
 * The unified API for building rich integrations with multiple CRM platforms.
 *
 * API version: 1.0
 * Contact: hello@merge.dev
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package merge_crm_client

import (
	"encoding/json"
	"time"
)

// PatchedOpportunityRequest # The Opportunity Object ### Description The `Opportunity` object is used to represent a deal opportunity in a CRM system. ### Usage Example TODO
type PatchedOpportunityRequest struct {
	// The opportunity's name.
	Name NullableString `json:"name,omitempty"`
	// The opportunity's description.
	Description NullableString `json:"description,omitempty"`
	// The opportunity's amount.
	Amount NullableInt32 `json:"amount,omitempty"`
	// The opportunity's owner.
	Owner NullableString `json:"owner,omitempty"`
	// The account of the opportunity.
	Account NullableString `json:"account,omitempty"`
	// The stage of the opportunity.
	Stage NullableString `json:"stage,omitempty"`
	// The opportunity's status.  * `OPEN` - OPEN * `WON` - WON * `LOST` - LOST
	Status NullableOpportunityStatusEnum `json:"status,omitempty"`
	// When the opportunity's last activity occurred.
	LastActivityAt NullableTime `json:"last_activity_at,omitempty"`
	// When the opportunity was closed.
	CloseDate NullableTime `json:"close_date,omitempty"`
	IntegrationParams map[string]interface{} `json:"integration_params,omitempty"`
	LinkedAccountParams map[string]interface{} `json:"linked_account_params,omitempty"`
	RemoteFields *[]RemoteFieldRequest `json:"remote_fields,omitempty"`
	// raw json response by property name
	ResponseRaw map[string]json.RawMessage `json:"-"`
}

// NewPatchedOpportunityRequest instantiates a new PatchedOpportunityRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPatchedOpportunityRequest() *PatchedOpportunityRequest {
	this := PatchedOpportunityRequest{}
	return &this
}

// NewPatchedOpportunityRequestWithDefaults instantiates a new PatchedOpportunityRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPatchedOpportunityRequestWithDefaults() *PatchedOpportunityRequest {
	this := PatchedOpportunityRequest{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedOpportunityRequest) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedOpportunityRequest) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *PatchedOpportunityRequest) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *PatchedOpportunityRequest) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *PatchedOpportunityRequest) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *PatchedOpportunityRequest) UnsetName() {
	o.Name.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedOpportunityRequest) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedOpportunityRequest) GetDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *PatchedOpportunityRequest) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *PatchedOpportunityRequest) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *PatchedOpportunityRequest) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *PatchedOpportunityRequest) UnsetDescription() {
	o.Description.Unset()
}

// GetAmount returns the Amount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedOpportunityRequest) GetAmount() int32 {
	if o == nil || o.Amount.Get() == nil {
		var ret int32
		return ret
	}
	return *o.Amount.Get()
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedOpportunityRequest) GetAmountOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Amount.Get(), o.Amount.IsSet()
}

// HasAmount returns a boolean if a field has been set.
func (o *PatchedOpportunityRequest) HasAmount() bool {
	if o != nil && o.Amount.IsSet() {
		return true
	}

	return false
}

// SetAmount gets a reference to the given NullableInt32 and assigns it to the Amount field.
func (o *PatchedOpportunityRequest) SetAmount(v int32) {
	o.Amount.Set(&v)
}
// SetAmountNil sets the value for Amount to be an explicit nil
func (o *PatchedOpportunityRequest) SetAmountNil() {
	o.Amount.Set(nil)
}

// UnsetAmount ensures that no value is present for Amount, not even an explicit nil
func (o *PatchedOpportunityRequest) UnsetAmount() {
	o.Amount.Unset()
}

// GetOwner returns the Owner field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedOpportunityRequest) GetOwner() string {
	if o == nil || o.Owner.Get() == nil {
		var ret string
		return ret
	}
	return *o.Owner.Get()
}

// GetOwnerOk returns a tuple with the Owner field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedOpportunityRequest) GetOwnerOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Owner.Get(), o.Owner.IsSet()
}

// HasOwner returns a boolean if a field has been set.
func (o *PatchedOpportunityRequest) HasOwner() bool {
	if o != nil && o.Owner.IsSet() {
		return true
	}

	return false
}

// SetOwner gets a reference to the given NullableString and assigns it to the Owner field.
func (o *PatchedOpportunityRequest) SetOwner(v string) {
	o.Owner.Set(&v)
}
// SetOwnerNil sets the value for Owner to be an explicit nil
func (o *PatchedOpportunityRequest) SetOwnerNil() {
	o.Owner.Set(nil)
}

// UnsetOwner ensures that no value is present for Owner, not even an explicit nil
func (o *PatchedOpportunityRequest) UnsetOwner() {
	o.Owner.Unset()
}

// GetAccount returns the Account field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedOpportunityRequest) GetAccount() string {
	if o == nil || o.Account.Get() == nil {
		var ret string
		return ret
	}
	return *o.Account.Get()
}

// GetAccountOk returns a tuple with the Account field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedOpportunityRequest) GetAccountOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Account.Get(), o.Account.IsSet()
}

// HasAccount returns a boolean if a field has been set.
func (o *PatchedOpportunityRequest) HasAccount() bool {
	if o != nil && o.Account.IsSet() {
		return true
	}

	return false
}

// SetAccount gets a reference to the given NullableString and assigns it to the Account field.
func (o *PatchedOpportunityRequest) SetAccount(v string) {
	o.Account.Set(&v)
}
// SetAccountNil sets the value for Account to be an explicit nil
func (o *PatchedOpportunityRequest) SetAccountNil() {
	o.Account.Set(nil)
}

// UnsetAccount ensures that no value is present for Account, not even an explicit nil
func (o *PatchedOpportunityRequest) UnsetAccount() {
	o.Account.Unset()
}

// GetStage returns the Stage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedOpportunityRequest) GetStage() string {
	if o == nil || o.Stage.Get() == nil {
		var ret string
		return ret
	}
	return *o.Stage.Get()
}

// GetStageOk returns a tuple with the Stage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedOpportunityRequest) GetStageOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Stage.Get(), o.Stage.IsSet()
}

// HasStage returns a boolean if a field has been set.
func (o *PatchedOpportunityRequest) HasStage() bool {
	if o != nil && o.Stage.IsSet() {
		return true
	}

	return false
}

// SetStage gets a reference to the given NullableString and assigns it to the Stage field.
func (o *PatchedOpportunityRequest) SetStage(v string) {
	o.Stage.Set(&v)
}
// SetStageNil sets the value for Stage to be an explicit nil
func (o *PatchedOpportunityRequest) SetStageNil() {
	o.Stage.Set(nil)
}

// UnsetStage ensures that no value is present for Stage, not even an explicit nil
func (o *PatchedOpportunityRequest) UnsetStage() {
	o.Stage.Unset()
}

// GetStatus returns the Status field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedOpportunityRequest) GetStatus() OpportunityStatusEnum {
	if o == nil || o.Status.Get() == nil {
		var ret OpportunityStatusEnum
		return ret
	}
	return *o.Status.Get()
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedOpportunityRequest) GetStatusOk() (*OpportunityStatusEnum, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Status.Get(), o.Status.IsSet()
}

// HasStatus returns a boolean if a field has been set.
func (o *PatchedOpportunityRequest) HasStatus() bool {
	if o != nil && o.Status.IsSet() {
		return true
	}

	return false
}

// SetStatus gets a reference to the given NullableOpportunityStatusEnum and assigns it to the Status field.
func (o *PatchedOpportunityRequest) SetStatus(v OpportunityStatusEnum) {
	o.Status.Set(&v)
}
// SetStatusNil sets the value for Status to be an explicit nil
func (o *PatchedOpportunityRequest) SetStatusNil() {
	o.Status.Set(nil)
}

// UnsetStatus ensures that no value is present for Status, not even an explicit nil
func (o *PatchedOpportunityRequest) UnsetStatus() {
	o.Status.Unset()
}

// GetLastActivityAt returns the LastActivityAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedOpportunityRequest) GetLastActivityAt() time.Time {
	if o == nil || o.LastActivityAt.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.LastActivityAt.Get()
}

// GetLastActivityAtOk returns a tuple with the LastActivityAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedOpportunityRequest) GetLastActivityAtOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.LastActivityAt.Get(), o.LastActivityAt.IsSet()
}

// HasLastActivityAt returns a boolean if a field has been set.
func (o *PatchedOpportunityRequest) HasLastActivityAt() bool {
	if o != nil && o.LastActivityAt.IsSet() {
		return true
	}

	return false
}

// SetLastActivityAt gets a reference to the given NullableTime and assigns it to the LastActivityAt field.
func (o *PatchedOpportunityRequest) SetLastActivityAt(v time.Time) {
	o.LastActivityAt.Set(&v)
}
// SetLastActivityAtNil sets the value for LastActivityAt to be an explicit nil
func (o *PatchedOpportunityRequest) SetLastActivityAtNil() {
	o.LastActivityAt.Set(nil)
}

// UnsetLastActivityAt ensures that no value is present for LastActivityAt, not even an explicit nil
func (o *PatchedOpportunityRequest) UnsetLastActivityAt() {
	o.LastActivityAt.Unset()
}

// GetCloseDate returns the CloseDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedOpportunityRequest) GetCloseDate() time.Time {
	if o == nil || o.CloseDate.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.CloseDate.Get()
}

// GetCloseDateOk returns a tuple with the CloseDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedOpportunityRequest) GetCloseDateOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CloseDate.Get(), o.CloseDate.IsSet()
}

// HasCloseDate returns a boolean if a field has been set.
func (o *PatchedOpportunityRequest) HasCloseDate() bool {
	if o != nil && o.CloseDate.IsSet() {
		return true
	}

	return false
}

// SetCloseDate gets a reference to the given NullableTime and assigns it to the CloseDate field.
func (o *PatchedOpportunityRequest) SetCloseDate(v time.Time) {
	o.CloseDate.Set(&v)
}
// SetCloseDateNil sets the value for CloseDate to be an explicit nil
func (o *PatchedOpportunityRequest) SetCloseDateNil() {
	o.CloseDate.Set(nil)
}

// UnsetCloseDate ensures that no value is present for CloseDate, not even an explicit nil
func (o *PatchedOpportunityRequest) UnsetCloseDate() {
	o.CloseDate.Unset()
}

// GetIntegrationParams returns the IntegrationParams field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedOpportunityRequest) GetIntegrationParams() map[string]interface{} {
	if o == nil  {
		var ret map[string]interface{}
		return ret
	}
	return o.IntegrationParams
}

// GetIntegrationParamsOk returns a tuple with the IntegrationParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedOpportunityRequest) GetIntegrationParamsOk() (*map[string]interface{}, bool) {
	if o == nil || o.IntegrationParams == nil {
		return nil, false
	}
	return &o.IntegrationParams, true
}

// HasIntegrationParams returns a boolean if a field has been set.
func (o *PatchedOpportunityRequest) HasIntegrationParams() bool {
	if o != nil && o.IntegrationParams != nil {
		return true
	}

	return false
}

// SetIntegrationParams gets a reference to the given map[string]interface{} and assigns it to the IntegrationParams field.
func (o *PatchedOpportunityRequest) SetIntegrationParams(v map[string]interface{}) {
	o.IntegrationParams = v
}

// GetLinkedAccountParams returns the LinkedAccountParams field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedOpportunityRequest) GetLinkedAccountParams() map[string]interface{} {
	if o == nil  {
		var ret map[string]interface{}
		return ret
	}
	return o.LinkedAccountParams
}

// GetLinkedAccountParamsOk returns a tuple with the LinkedAccountParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedOpportunityRequest) GetLinkedAccountParamsOk() (*map[string]interface{}, bool) {
	if o == nil || o.LinkedAccountParams == nil {
		return nil, false
	}
	return &o.LinkedAccountParams, true
}

// HasLinkedAccountParams returns a boolean if a field has been set.
func (o *PatchedOpportunityRequest) HasLinkedAccountParams() bool {
	if o != nil && o.LinkedAccountParams != nil {
		return true
	}

	return false
}

// SetLinkedAccountParams gets a reference to the given map[string]interface{} and assigns it to the LinkedAccountParams field.
func (o *PatchedOpportunityRequest) SetLinkedAccountParams(v map[string]interface{}) {
	o.LinkedAccountParams = v
}

// GetRemoteFields returns the RemoteFields field value if set, zero value otherwise.
func (o *PatchedOpportunityRequest) GetRemoteFields() []RemoteFieldRequest {
	if o == nil || o.RemoteFields == nil {
		var ret []RemoteFieldRequest
		return ret
	}
	return *o.RemoteFields
}

// GetRemoteFieldsOk returns a tuple with the RemoteFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedOpportunityRequest) GetRemoteFieldsOk() (*[]RemoteFieldRequest, bool) {
	if o == nil || o.RemoteFields == nil {
		return nil, false
	}
	return o.RemoteFields, true
}

// HasRemoteFields returns a boolean if a field has been set.
func (o *PatchedOpportunityRequest) HasRemoteFields() bool {
	if o != nil && o.RemoteFields != nil {
		return true
	}

	return false
}

// SetRemoteFields gets a reference to the given []RemoteFieldRequest and assigns it to the RemoteFields field.
func (o *PatchedOpportunityRequest) SetRemoteFields(v []RemoteFieldRequest) {
	o.RemoteFields = &v
}

func (o PatchedOpportunityRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.Amount.IsSet() {
		toSerialize["amount"] = o.Amount.Get()
	}
	if o.Owner.IsSet() {
		toSerialize["owner"] = o.Owner.Get()
	}
	if o.Account.IsSet() {
		toSerialize["account"] = o.Account.Get()
	}
	if o.Stage.IsSet() {
		toSerialize["stage"] = o.Stage.Get()
	}
	if o.Status.IsSet() {
		toSerialize["status"] = o.Status.Get()
	}
	if o.LastActivityAt.IsSet() {
		toSerialize["last_activity_at"] = o.LastActivityAt.Get()
	}
	if o.CloseDate.IsSet() {
		toSerialize["close_date"] = o.CloseDate.Get()
	}
	if o.IntegrationParams != nil {
		toSerialize["integration_params"] = o.IntegrationParams
	}
	if o.LinkedAccountParams != nil {
		toSerialize["linked_account_params"] = o.LinkedAccountParams
	}
	if o.RemoteFields != nil {
		toSerialize["remote_fields"] = o.RemoteFields
	}
	return json.Marshal(toSerialize)
}

func (v *PatchedOpportunityRequest) UnmarshalJSON(src []byte) error {
    type PatchedOpportunityRequestUnmarshalTarget PatchedOpportunityRequest

	var intermediateResult PatchedOpportunityRequestUnmarshalTarget
	var err1 = json.Unmarshal(src, &intermediateResult)
    if err1 != nil {
        return err1
    }
    var err2 = json.Unmarshal(src, &intermediateResult.ResponseRaw)
	if err2 != nil {
		return err2
	}

	*v = PatchedOpportunityRequest(intermediateResult)
	return nil
}
type NullablePatchedOpportunityRequest struct {
	value *PatchedOpportunityRequest
	isSet bool
}

func (v NullablePatchedOpportunityRequest) Get() *PatchedOpportunityRequest {
	return v.value
}

func (v *NullablePatchedOpportunityRequest) Set(val *PatchedOpportunityRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePatchedOpportunityRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePatchedOpportunityRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePatchedOpportunityRequest(val *PatchedOpportunityRequest) *NullablePatchedOpportunityRequest {
	return &NullablePatchedOpportunityRequest{value: val, isSet: true}
}

func (v NullablePatchedOpportunityRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePatchedOpportunityRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	var err1 = json.Unmarshal(src, &v.value)
    if err1 != nil {
        return err1
    }
    return json.Unmarshal(src, &v.value.ResponseRaw)
}


