/*
 * Merge CRM API
 *
 * The unified API for building rich integrations with multiple CRM platforms.
 *
 * API version: 1.0
 * Contact: hello@merge.dev
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package merge_crm_client

import (
	"encoding/json"
)

// RemoteFieldClassForCustomObjectClassItemSchema struct for RemoteFieldClassForCustomObjectClassItemSchema
type RemoteFieldClassForCustomObjectClassItemSchema struct {
	ItemType NullableString `json:"item_type"`
	ItemFormat NullableString `json:"item_format"`
	ItemChoices []string `json:"item_choices"`
	// raw json response by property name
	ResponseRaw map[string]json.RawMessage `json:"-"`
}

// NewRemoteFieldClassForCustomObjectClassItemSchema instantiates a new RemoteFieldClassForCustomObjectClassItemSchema object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRemoteFieldClassForCustomObjectClassItemSchema(itemType NullableString, itemFormat NullableString, itemChoices []string) *RemoteFieldClassForCustomObjectClassItemSchema {
	this := RemoteFieldClassForCustomObjectClassItemSchema{}
	this.ItemType = itemType
	this.ItemFormat = itemFormat
	this.ItemChoices = itemChoices
	return &this
}

// NewRemoteFieldClassForCustomObjectClassItemSchemaWithDefaults instantiates a new RemoteFieldClassForCustomObjectClassItemSchema object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRemoteFieldClassForCustomObjectClassItemSchemaWithDefaults() *RemoteFieldClassForCustomObjectClassItemSchema {
	this := RemoteFieldClassForCustomObjectClassItemSchema{}
	return &this
}

// GetItemType returns the ItemType field value
// If the value is explicit nil, the zero value for string will be returned
func (o *RemoteFieldClassForCustomObjectClassItemSchema) GetItemType() string {
	if o == nil || o.ItemType.Get() == nil {
		var ret string
		return ret
	}

	return *o.ItemType.Get()
}

// GetItemTypeOk returns a tuple with the ItemType field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RemoteFieldClassForCustomObjectClassItemSchema) GetItemTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ItemType.Get(), o.ItemType.IsSet()
}

// SetItemType sets field value
func (o *RemoteFieldClassForCustomObjectClassItemSchema) SetItemType(v string) {
	o.ItemType.Set(&v)
}

// GetItemFormat returns the ItemFormat field value
// If the value is explicit nil, the zero value for string will be returned
func (o *RemoteFieldClassForCustomObjectClassItemSchema) GetItemFormat() string {
	if o == nil || o.ItemFormat.Get() == nil {
		var ret string
		return ret
	}

	return *o.ItemFormat.Get()
}

// GetItemFormatOk returns a tuple with the ItemFormat field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RemoteFieldClassForCustomObjectClassItemSchema) GetItemFormatOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ItemFormat.Get(), o.ItemFormat.IsSet()
}

// SetItemFormat sets field value
func (o *RemoteFieldClassForCustomObjectClassItemSchema) SetItemFormat(v string) {
	o.ItemFormat.Set(&v)
}

// GetItemChoices returns the ItemChoices field value
// If the value is explicit nil, the zero value for []string will be returned
func (o *RemoteFieldClassForCustomObjectClassItemSchema) GetItemChoices() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.ItemChoices
}

// GetItemChoicesOk returns a tuple with the ItemChoices field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RemoteFieldClassForCustomObjectClassItemSchema) GetItemChoicesOk() (*[]string, bool) {
	if o == nil || o.ItemChoices == nil {
		return nil, false
	}
	return &o.ItemChoices, true
}

// SetItemChoices sets field value
func (o *RemoteFieldClassForCustomObjectClassItemSchema) SetItemChoices(v []string) {
	o.ItemChoices = v
}

func (o RemoteFieldClassForCustomObjectClassItemSchema) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["item_type"] = o.ItemType.Get()
	}
	if true {
		toSerialize["item_format"] = o.ItemFormat.Get()
	}
	if o.ItemChoices != nil {
		toSerialize["item_choices"] = o.ItemChoices
	}
	return json.Marshal(toSerialize)
}

func (v *RemoteFieldClassForCustomObjectClassItemSchema) UnmarshalJSON(src []byte) error {
    type RemoteFieldClassForCustomObjectClassItemSchemaUnmarshalTarget RemoteFieldClassForCustomObjectClassItemSchema

	var intermediateResult RemoteFieldClassForCustomObjectClassItemSchemaUnmarshalTarget
	var err1 = json.Unmarshal(src, &intermediateResult)
    if err1 != nil {
        return err1
    }
    var err2 = json.Unmarshal(src, &intermediateResult.ResponseRaw)
	if err2 != nil {
		return err2
	}

	*v = RemoteFieldClassForCustomObjectClassItemSchema(intermediateResult)
	return nil
}
type NullableRemoteFieldClassForCustomObjectClassItemSchema struct {
	value *RemoteFieldClassForCustomObjectClassItemSchema
	isSet bool
}

func (v NullableRemoteFieldClassForCustomObjectClassItemSchema) Get() *RemoteFieldClassForCustomObjectClassItemSchema {
	return v.value
}

func (v *NullableRemoteFieldClassForCustomObjectClassItemSchema) Set(val *RemoteFieldClassForCustomObjectClassItemSchema) {
	v.value = val
	v.isSet = true
}

func (v NullableRemoteFieldClassForCustomObjectClassItemSchema) IsSet() bool {
	return v.isSet
}

func (v *NullableRemoteFieldClassForCustomObjectClassItemSchema) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRemoteFieldClassForCustomObjectClassItemSchema(val *RemoteFieldClassForCustomObjectClassItemSchema) *NullableRemoteFieldClassForCustomObjectClassItemSchema {
	return &NullableRemoteFieldClassForCustomObjectClassItemSchema{value: val, isSet: true}
}

func (v NullableRemoteFieldClassForCustomObjectClassItemSchema) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRemoteFieldClassForCustomObjectClassItemSchema) UnmarshalJSON(src []byte) error {
	v.isSet = true
	var err1 = json.Unmarshal(src, &v.value)
    if err1 != nil {
        return err1
    }
    return json.Unmarshal(src, &v.value.ResponseRaw)
}


