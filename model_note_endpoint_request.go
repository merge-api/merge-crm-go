/*
 * Merge CRM API
 *
 * The unified API for building rich integrations with multiple CRM platforms.
 *
 * API version: 1.0
 * Contact: hello@merge.dev
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package merge_crm_client

import (
	"encoding/json"
)

// NoteEndpointRequest struct for NoteEndpointRequest
type NoteEndpointRequest struct {
	Model NoteRequest `json:"model"`
	// raw json response by property name
	ResponseRaw map[string]json.RawMessage `json:"-"`
}

// NewNoteEndpointRequest instantiates a new NoteEndpointRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNoteEndpointRequest(model NoteRequest) *NoteEndpointRequest {
	this := NoteEndpointRequest{}
	this.Model = model
	return &this
}

// NewNoteEndpointRequestWithDefaults instantiates a new NoteEndpointRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNoteEndpointRequestWithDefaults() *NoteEndpointRequest {
	this := NoteEndpointRequest{}
	return &this
}

// GetModel returns the Model field value
func (o *NoteEndpointRequest) GetModel() NoteRequest {
	if o == nil {
		var ret NoteRequest
		return ret
	}

	return o.Model
}

// GetModelOk returns a tuple with the Model field value
// and a boolean to check if the value has been set.
func (o *NoteEndpointRequest) GetModelOk() (*NoteRequest, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Model, true
}

// SetModel sets field value
func (o *NoteEndpointRequest) SetModel(v NoteRequest) {
	o.Model = v
}

func (o NoteEndpointRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["model"] = o.Model
	}
	return json.Marshal(toSerialize)
}

func (v *NoteEndpointRequest) UnmarshalJSON(src []byte) error {
    type NoteEndpointRequestUnmarshalTarget NoteEndpointRequest

	var intermediateResult NoteEndpointRequestUnmarshalTarget
	var err1 = json.Unmarshal(src, &intermediateResult)
    if err1 != nil {
        return err1
    }
    var err2 = json.Unmarshal(src, &intermediateResult.ResponseRaw)
	if err2 != nil {
		return err2
	}

	*v = NoteEndpointRequest(intermediateResult)
	return nil
}
type NullableNoteEndpointRequest struct {
	value *NoteEndpointRequest
	isSet bool
}

func (v NullableNoteEndpointRequest) Get() *NoteEndpointRequest {
	return v.value
}

func (v *NullableNoteEndpointRequest) Set(val *NoteEndpointRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableNoteEndpointRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableNoteEndpointRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNoteEndpointRequest(val *NoteEndpointRequest) *NullableNoteEndpointRequest {
	return &NullableNoteEndpointRequest{value: val, isSet: true}
}

func (v NullableNoteEndpointRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNoteEndpointRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	var err1 = json.Unmarshal(src, &v.value)
    if err1 != nil {
        return err1
    }
    return json.Unmarshal(src, &v.value.ResponseRaw)
}


